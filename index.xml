<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>爱心网 - Aixin.me</title>
    <link>https://aixin.me/</link>
    <description>Recent content on 爱心网 - Aixin.me</description>
    <image>
      <url>https://aixin.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://aixin.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 07 Aug 2021 20:37:27 +0800</lastBuildDate><atom:link href="https://aixin.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://aixin.me/about/</link>
      <pubDate>Tue, 03 Nov 2020 16:54:38 +0800</pubDate>
      
      <guid>https://aixin.me/about/</guid>
      <description>aixin.me 心中有爱，遇见更好的自己</description>
    </item>
    
    <item>
      <title>Egg.js Basic Tutorial</title>
      <link>https://aixin.me/post/eggjs-basic-tutorial/</link>
      <pubDate>Sat, 07 Aug 2021 20:37:27 +0800</pubDate>
      
      <guid>https://aixin.me/post/eggjs-basic-tutorial/</guid>
      <description>官网：https://eggjs.org/zh-cn/
安装 // 1、创建并进入项目目录 mkdir egg-example &amp;amp;&amp;amp; cd egg-example // 2、初始化 npm init egg --type=simple // 3、安装项目 npm i // 4、启动项目 npm run dev // http://localhost:7001  type的类型
simple - 基础应用模板
microservice - 基于egg的微服务模板
sequelize - 带有sequelize的egg应用
ts - typescript的基础应用模板
empty - 空模板
plugin - egg 插件模板
framework - 框架模板
 核心功能 1、控制器 Controller // app/controller/home.js const Controller = require(&#39;egg&#39;).Controller; class HomeController extends Controller { async index() { this.ctx.body = &#39;Hello world&#39;; } } module.</description>
    </item>
    
    <item>
      <title>Axure Advanced Tutorial</title>
      <link>https://aixin.me/post/axure-advanced-tutorial/</link>
      <pubDate>Fri, 06 Aug 2021 16:09:52 +0800</pubDate>
      
      <guid>https://aixin.me/post/axure-advanced-tutorial/</guid>
      <description>在axure交互设计时，函数可以用在条件公式和需要赋值的地方，其基本语法是用双方括号包含，变量值和函数用英文句号连接。
 例如：[[LVAR. Width]] 表示变量LVAR的宽度，[[This. Width]] 当前元件的宽度
 一、元件函数    名称 用途     This 获取当前元件对象。当前元件是指当前添加交互动作的元件   Target 获取目标元件对象。目标元件是指当前交互动作控制的元件。   x 获取元件对象的X轴坐标值。   y 获取元件对象的Y轴坐标值。   width 获取元件对象的宽度值   scrollX 获取元件对象的水平滚动距离（当前仅限动态面板）   scrollY 获取元件对象的垂直滚动距离（当前仅限动态面板）   text 获取元件对象的文本文字   name 获取元件对象的自定义名称。   top 获取元件对象的上边界坐标值。   left 获取元件对象的左边界坐标值。   right 获取元件对象的右边界坐标值。   bottom 获取元件对象的下边界坐标值。   opacity 获取元件对象的不透明比例。   rotation 获取元件对象的旋转角度。    二、鼠标指针函数     名称 用途     Cursor.</description>
    </item>
    
    <item>
      <title>Visual Studio Code Tutorial</title>
      <link>https://aixin.me/post/visual-studio-code-tutorial/</link>
      <pubDate>Fri, 16 Jul 2021 13:06:08 +0800</pubDate>
      
      <guid>https://aixin.me/post/visual-studio-code-tutorial/</guid>
      <description>一、下载地址 https://code.visualstudio.com/
二、插件推荐    插件名称 功能说明     Chinese (Simplified) Language Pack for Visual Studio Code 中文汉化包   Code Runner 运行代码   beautify 美化代码   Atuo Rename Tag 自动修改标签头尾   Atuo Close Tag 自动补全标签   Path Intellisense 路径提示器   Markdown PDF 将MD转化为PDF   Document This 生成注释文档   Color Picker 拾色器   Prettify JSON 格式化JSON       Vetur Vue代码工具   eggjs eggjs代码工具   Vscode NestJs Snippets NestJs代码工具       VSCode Great Icons 一套文件图标   Power Mode 打字效果   Bracket Pair Colorizer 给括号分别着色   Indent-Rainbow 多颜色交替缩进    三、主题推荐    主题名称 功能说明     Atom One Dark Theme Atom的样式   Dimmed 黑白灰    四、快捷键 1、通用 General</description>
    </item>
    
    <item>
      <title>2021年祝大家春节愉快，牛年大吉！</title>
      <link>https://aixin.me/post/2021-spring-festivald/</link>
      <pubDate>Wed, 10 Feb 2021 13:20:11 +0800</pubDate>
      
      <guid>https://aixin.me/post/2021-spring-festivald/</guid>
      <description>2021年祝大家春节愉快，牛年大吉！ 艰难的一年过去了，未来或许更加艰难，也或许越来越好，但任何时候依然要不忘初心，努力奋斗。
2021年目标  专注最重要的事情，做精做好 多些远谋，少些近虑 放下该放下的  </description>
    </item>
    
    <item>
      <title>Vue3 开发 Todolist 教程</title>
      <link>https://aixin.me/post/vue-todo-tutorial/</link>
      <pubDate>Tue, 10 Nov 2020 13:54:51 +0800</pubDate>
      
      <guid>https://aixin.me/post/vue-todo-tutorial/</guid>
      <description>本文状态：未完成
 一、产品原型  参考 Windows todo设计一个简单的移动端todo页面原型
 二、开发教程 1、新建Todolist.vue  先通过脚手架配置好vue项目：@vue/cli
 在项目src\views下面新建Todo.vue
&amp;lt;template&amp;gt;&amp;lt;div class=&amp;quot;todo&amp;quot;&amp;gt;&amp;lt;h1&amp;gt;Todolist&amp;lt;/h1&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; v-model=&amp;quot;content&amp;quot; @keypress=&amp;quot;add&amp;quot;&amp;gt;&amp;lt;button @click=&amp;quot;add&amp;quot;&amp;gt;Add&amp;lt;/button&amp;gt;&amp;lt;p&amp;gt;{{content}}&amp;lt;/p&amp;gt;&amp;lt;div class=&amp;quot;section-title&amp;quot;&amp;gt;待办&amp;lt;/div&amp;gt;&amp;lt;ul class=&amp;quot;todolist underway&amp;quot;&amp;gt;&amp;lt;TodoItem :=&amp;quot;todo&amp;quot; v-for=&amp;quot;todo in underway&amp;quot; :key=&amp;quot;todo.id&amp;quot; :class=&amp;quot;{done:todo.status}&amp;quot; v-model=&amp;quot;todo.status&amp;quot; /&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;div class=&amp;quot;section-title&amp;quot;&amp;gt;已完成&amp;lt;/div&amp;gt;&amp;lt;ul class=&amp;quot;todolist completed&amp;quot;&amp;gt;&amp;lt;TodoItem :=&amp;quot;todo&amp;quot; v-for=&amp;quot;todo in completed&amp;quot; :key=&amp;quot;todo.id&amp;quot; :class=&amp;quot;{done:todo.status}&amp;quot; v-model=&amp;quot;todo.status&amp;quot; /&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/template&amp;gt;&amp;lt;script&amp;gt;import TodoItem from &#39;../components/TodoItem&#39;;export default {name: &amp;quot;Todo&amp;quot;,components:{TodoItem},data(){return{content:&#39;hello world!</description>
    </item>
    
    <item>
      <title>Vue3 基础知识点</title>
      <link>https://aixin.me/post/vue3-base-tutorials/</link>
      <pubDate>Thu, 05 Nov 2020 16:04:12 +0800</pubDate>
      
      <guid>https://aixin.me/post/vue3-base-tutorials/</guid>
      <description>安装VUE npm install webpack -gnpm install webpack-cli -gnpm install -g @vue/cli @vue/cli-service-globalvue create hello-worldnpm run servenpm run build基本框架 &amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;&amp;lt;p&amp;gt;{{ message }}&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;{{ content() }}&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;var vm = new Vue({el: &#39;#app&#39;,data: {message: &#39;Hello&#39;},methods: {content: function(){return this.message + &#39; Vue.js&#39;;}}})说明： vue代码结构：
new Vue({el: &#39;#app&#39;,//根元素data: { //变量message: &#39;Hello&#39;},methods: { //函数方法content: function(){return this.</description>
    </item>
    
    <item>
      <title>静态博客Hugo安装及使用教程</title>
      <link>https://aixin.me/post/how-to-hugo/</link>
      <pubDate>Thu, 05 Nov 2020 09:52:17 +0800</pubDate>
      
      <guid>https://aixin.me/post/how-to-hugo/</guid>
      <description>一、安装  下面时windows10的安装教程，Linux和MAC去看官方教程
 1、下载 最新版下载地址：https://github.com/gohugoio/hugo/releases
下载 Windows-64bit.zip
2、新建本地目录  D:\Hugo
D:\Hugo\bin
D:\Hugo\Sites
盘符和目录都可以自定义，但bin和Sites要固定
 将下载的安装包里面的hugo.exe解压到D:\Hugo\bin下面
3、配置环境 我的电脑→右键→高级→环境变量→系统变量→Path，增加D:\Hugo\bin
4、安装完成 验证
hugo version //查看版本hugo help //帮助文档 能正常输出即安装成功
 二、新建网站 在D:\Hugo\Sites下面打开cmd，或其他命令工具
hugo new site simple.com 新建simple.com 网站名自定义
  回车创建成功！
然后在D:\Hugo\Sites下面就会新建一个simple文件夹
 三、编写内容 1、目录说明  archetypes/ 创建页面的原型文件，比如标题时间等，可以自定义
content/ markdown原文件存储目录
layouts/ 样式自定义时需要
static/ 静态文件
themes/ 主题会安装在这儿
config.toml 配置文件
 2、创建页面 在网站目录下面执行命令
hugo new about.md 自动在当前网站下的content目录下生成about.md文件
 3、创建文章 hugo new post/hello-world.</description>
    </item>
    
    <item>
      <title>财会常用知识点</title>
      <link>https://aixin.me/post/finance-accounting/</link>
      <pubDate>Fri, 17 Jan 2020 15:06:55 +0000</pubDate>
      
      <guid>https://aixin.me/post/finance-accounting/</guid>
      <description>借贷记账法 借贷记账法下，所有账户的结构都是左方为借方，右方为贷方，但借方、贷方反映会计要素数量变化的增减性质则是不固定的。不同性质的账户，借贷方所登记的内容不同，下面分别说明各类账户的结构。
有借必有贷，借贷必相等
  资产类账户的结构 在资产类账户中，它的借方记录资产的增加额，贷方记录资产的减少额。在同一会计期间（年、月），借方记录的合计数额称作本期借方发生额，贷方记录的合计数称作本期贷方发生额，在每一会计期间的期末将借贷方发生额相比较，其差额称作期末余额。资产类账户的期末余额一般在借方。
资产类账户的期末余额可根据下列公式计算： 期末余额（借方）= 期初余额 + 本期借方发生额 - 本期贷方发生额
  负债类账户和所有者权益类账户的结构 负债及所有者权益类账户的结构与资产类账户正好相反，其贷方记录负债及所有者权益的增加额；借方记录负债及所有者权益的减少额，期末余额一般应在贷方。
负债类账户和所有者权益类账户的期末余额可根据下列公式计算： 期末余额（贷方）= 期初余额 + 本期贷方发生额 - 本期借方发生额
  成本费用类账户的结构 成本类账户的结构与资产类账户的结构基本相同，账户的借方记录费用成本的增加额，账户的贷方记录费用成本转入抵销收益类账户（减少）的数额，由于借方记录的费用成本的增加额一般都要通过贷方转出，所以账户通常没有余额。如果有余额，也表现为借方余额。
  收益类账户的结构 收益类账户的结构则与负债类账户和所有者权益类账户的结构基本相同，收入的增加额记入账户的贷方，收入转出（减少额）则应记入账户的借方，由于贷方记录的收入增加额一般要通过借方转出，所以账户通常也没有期末余额。如果有余额，同样也表现为贷方余额。
  </description>
    </item>
    
    <item>
      <title>ATR：均幅指标</title>
      <link>https://aixin.me/post/average-true-range/</link>
      <pubDate>Fri, 27 Dec 2019 10:41:39 +0000</pubDate>
      
      <guid>https://aixin.me/post/average-true-range/</guid>
      <description>Average True Range 取一定时间周期内的股价波动幅度的移动平均值，通常使用14天。
由于惊恐抛售所驱使的价格的剧烈下跌，这一指标在市场底部通常可以达到一个较高的价值。这一指标对于长期持续边幅移动的时段是非常典型的，这一情况通常发生在市场的顶部，或者是在价格巩固期间。平均波幅通道技术指标依据同样的原则，可以被解释成为其他一些易变指数。根据这个指标来进行预测的原则可以表达为：该指标价值越高，趋势改变的可能性就越高；该指标的价值越低，趋势的移动性就越弱。
 t：当日tody； p：上一个节点previous n：时间单元unit； Ci：第i日的收盘价close； Hi：第i日的最高价height； Li：第i日的最低价low。
 $$ TR = Max[(H-L),Abs(H-C_p),Abs(L-C_p)] $$
 Max 取最大值 Abs 取绝对值absolute
 $$ ATR = \Big( \frac{1}{n}\Big) \sum^{(n)}_{(i=1)} TR_i $$
波动性较高的股票具有较高的ATR，而波动性较低的股票具有较低的ATR。 它的创建是为了使交易者可以通过简单的计算来更准确地衡量资产的每日波动性。该指标未指示价格方向；相反，它主要用于衡量由缺口引起的波动并限制上下波动 ATR的使用通常用作退出方法，无论如何做出进入决定
可以使用ATR方法来确定头寸规模，从而说明单个交易者自己接受风险的意愿以及基础市场的波动性
ATR使用范围 1、利用ATR资金配比 通过ATR指标的具体数值我们可以看到一些基本的信息,从中分别具体货币的波动情况,这样就可以调整资金的配比.并且每种产品的价格都在不断的波动中,所以可以根据具体的ATR指标的参数来调整交易的计划
2、利用ATR选择入场点位 短期ATR一般大于长期的ATR,我们可以通过短期和长期的波动性的差值,并根据相应的价格方向入场,同时在趋势比较稳定的时候平仓出局.
3、利用ATR止损 著名的海龟法则中,海龟交易法则按照价格高于初始价格0.5ATR进行加仓操作,按照价格低于建仓价2ATR进行止损操作.</description>
    </item>
    
    <item>
      <title>BackTrader学习笔记</title>
      <link>https://aixin.me/post/backtrader/</link>
      <pubDate>Mon, 23 Dec 2019 10:17:48 +0000</pubDate>
      
      <guid>https://aixin.me/post/backtrader/</guid>
      <description>一、BackTrader介绍 BackTrader是开源免费的量化交易策略回测系统， 运行流程：
 引入backtrader 加载和注入数据Feed（cerebro.adddata） 执行：cerebro.run() 可视化结果：cerebro.plot()  二、安装BackTrader 1、安装环境要求：  Python 2.7 Python 3.2 / 3.3/ 3.4 / 3.5 pypy/pypy3 Matplotlib&amp;gt; = 1.4.1（如果需要绘图的话需要配置）  2、兼容Python2.x/3.x from __future__ import (absolute_import, division, print_function,unicode_literals) 3.1、通过pip安装: pip install backtrader
如果想同时安装matplotlib： pip install backtrader[plotting]
3.2、通过源安装 https://github.com/mementum/backtrader python安装源文件，自己搜索
3.3、通过pycharm安装 新建项目 -&amp;gt; Files -&amp;gt; Settings -&amp;gt; Project 项目名称 -&amp;gt; Project Interpreter -&amp;gt; 右侧加号，搜索backtrader Install Package即可
三、backtrader用法 1、使用前说明 常用数据名称： 开盘价，最高价，最低价，收盘价，成交量，持仓量
数据索引方式： 当前值：[0] 前一个值：[-1] 前2个值：[-2] ……
 说明：所有的数字都是历史值，所以只能往后推</description>
    </item>
    
    <item>
      <title>MA/SMA/EMA</title>
      <link>https://aixin.me/post/moving-average/</link>
      <pubDate>Fri, 20 Dec 2019 18:13:57 +0000</pubDate>
      
      <guid>https://aixin.me/post/moving-average/</guid>
      <description>MA(Moving Average):移动平均线 可以过滤随机价格波动中的噪音来帮助平滑价格走势，基于过去的价格，因此时趋势跟踪。包括简单移动平均线(SMA)和指数移动平均线(EMA)，常见应用为确定趋势方向并确定支撑位和阻力位
  简单移动平均线(SMA)： $SMA = \frac{A_1 + A_2 + \cdots + A_n}{n}$ A:n期的平均值 n：周期数
  指数移动平均线(EMA): $EMA_t = [V_t \times \big(\frac{s}{1+d}\big)] + EMA_y \times [1 - \big(\frac{s}{1+d}\big)]$
  $EMA_t$:当天或当期的EMA $V_t$:当天或当期的价格值 $EMA_y$:昨天或上期的EMA s:平滑度 d:天数或期数
要计算EMA，线要计算SMA，然后再计算平滑度s 平滑度的计算公式：$s = \frac{2}{选定天数+1}$
EMA:指数移动平均（考虑了当天收盘价），快EMA（短时期，通常用12周期），慢EMA（长时期，通常用26周期）</description>
    </item>
    
    <item>
      <title>常用平均数</title>
      <link>https://aixin.me/post/average/</link>
      <pubDate>Fri, 20 Dec 2019 16:10:56 +0000</pubDate>
      
      <guid>https://aixin.me/post/average/</guid>
      <description>算数平均数 一组数据的所有数据之和除以数据个数，反映数据集中的趋势 $$ A_n = \frac{a_1+a_2+a_3+\cdots+a_n}{n} $$
几何平均数 n数连续乘积，然后开n次方根 $$ G_n = \sqrt[n]{a_1 \times a_2 \times a_3 \times \cdots \times a_n} $$
调和平均数（数学，非统计） 每一个数值取倒数，然后将所有倒数求平均，然后将得到的平均数取到数 $$ H_n = \frac{n}{\frac{1}{a_1} + \frac{1}{a_2} \frac{1}{a_3} + \cdots + \frac{1}{a_n}} $$
加权平均数 如果是一个含有重复数据的数组n，所有数的合除以所有数重复出现的总次数， 数字$x_n$出现的次数是$f_n$ $$ n = f_1 + f_2 + f_3 + \cdots + f_n $$ $$ \overline{X} = \frac{x_1 \times f_1 + x_2 \times f_2 + x_3 \times f_3 + \cdots + x_n \times f_n}{n} $$</description>
    </item>
    
    <item>
      <title>MACD 平滑异同移动平均指标</title>
      <link>https://aixin.me/post/macd/</link>
      <pubDate>Fri, 20 Dec 2019 15:46:45 +0000</pubDate>
      
      <guid>https://aixin.me/post/macd/</guid>
      <description>MACD原理介绍 MACD(Moving Average Convergence Divergence),是根据均线的构造原理，对股票价格的收盘价进行平滑处理，求出算术平均值以后再进行计算，是一种趋向类指标。
MACD指标是运用快速（短期）和慢速（长期）移动平均线及其聚合与分离的征兆，加以双重平滑运算。而根据移动平均线原理发展出来的MACD，一则去除了移动平均线频繁发出假信号的缺陷，二则保留了移动平均线的效果，因此，MACD指标具有均线趋势性、稳重性、安定性等特点，是用来研判买卖股票的时机，预测股票价格涨跌的技术分析指标 。
MACD指标主要是通过EMA、DIF和DEA（或叫MACD、DEM）这三值之间关系的研判，DIF和DEA连接起来的移动平均线的研判以及DIF减去DEM值而绘制成的柱状图（BAR）的研判等来分析判断行情，预测股价中短期趋势的主要的股市技术分析指标。其中，DIF是核心，DEA是辅助。DIF是快速平滑移动平均线（EMA1）和慢速平滑移动平均线（EMA2）的差。BAR柱状图在股市技术软件上是用红柱和绿柱的收缩来研判行情。 价格数据：收盘价close EMA：指数移动平均线 DIF（差离值） = EMA12日线 - EMA26日线 EMA9：是“信号线”，又称DEA DIF线与EMA9日线比较，DIF穿越到EMA9上方是买入或做多信号，DIF穿越到EMA9的下方为卖出或做空信号， DIF值越大，上涨趋势越大，DIF值越小，下跌趋势越大
柱状图：(DIF-DEA)*2
解释方法：交叉、散度、快速上升/下降
RSI相对强度指标（振荡器），范围是0到100，超过70时，是为超买或高估，可能引发趋势翻转或价格回调，小于30时，视为超卖或低估。
MACD计算方式 DMA:平行线差指标</description>
    </item>
    
    <item>
      <title>量化交易相关名词解释</title>
      <link>https://aixin.me/post/quantitative-trading-learning/</link>
      <pubDate>Tue, 17 Dec 2019 14:49:55 +0000</pubDate>
      
      <guid>https://aixin.me/post/quantitative-trading-learning/</guid>
      <description>一、凯利公式 英文：The Kelly Criterion
 在概率论中，凯利公式（也称 “凯利方程式”）是一个在期望净收益为正的独立重复赌局中，使本金的长期增长率最大化的投注策略。该公式于 1956 年由约翰·拉里·凯利（John Larry Kelly）在《贝尔系统技术期刊》中发表，可以用来计算每次游戏中应投注的资金比例。若赌局的期望净收益为零或为负，凯利公式给出的结论是不赌为赢。
 公式： $$ f^* = \frac {bp-q}{b} = \frac {p(b+1)-1}{b} $$
 $f^*$ = 应投注的资本比值 p = 获胜的概率 q = 失败的概率 b = 赔率
 例子：有一个简单2赔1的赌局，扔硬币下注，硬币为正面则得2元，如果为反面则输掉1元，你的总资产为100元，每一次的押注都可投入任意金额。你会怎么赌呢？
硬币抛出正反面的概率都是50%，所以p、q获胜失败的概率都为0.5，而赔率＝期望盈利÷可能亏损=2元盈利÷1元亏损，赔率就是2，我们要求的答案是f，也就是(bp - q) ÷ b = (2 * 50% - 50%) ÷ 2 = 25%。拿出资金的25%来进行下注，才能使赌局收益最大化。
真正应该关心的是长期累积的收入，对于累积的收益来说，最后的结果只和输赢的局数有关，而和输赢的顺序无关。所以凯利公式推出了一个最佳的投入仓位比，来最大化长期的累积收益： $$ bet = edge / odds $$
 最佳仓位bet = 预期获益 / 获益回报 edge：赢面 odds：赔率
 $$ edge = bp - q $$</description>
    </item>
    
    <item>
      <title>Spring Boot 入门指南</title>
      <link>https://aixin.me/post/spring-boot-getting-started/</link>
      <pubDate>Thu, 05 Dec 2019 15:44:55 +0000</pubDate>
      
      <guid>https://aixin.me/post/spring-boot-getting-started/</guid>
      <description>官方教程 https://docs.spring.io/spring-boot/docs/2.2.1.RELEASE/reference/html/
1、Spring Boot介绍 Spring Boot可以轻松创建可以运行的独立的，生产级的基于Spring的应用程序。我们对Spring平台和第三方库采取自己的看法，以便您尽可能轻松地使用本教程。大多数Spring Boot应用程序只需要很少的Spring配置。
您可以使用Spring Boot来创建可以使用java -jar或更传统的war部署来启动的Java应用程序 。我们还提供了一个运行“spring script”的命令行工具。
2、系统要求 Spring Boot 2.2.1需要Java 8 及以上版本，同时也兼容了Java 13
支持以下构建程序：
 Maven 版本3.3+ Gradle 5.x  Servlet容器：
   Name Servlet版本     Tomcat 9.0 4.0   Jetty 9.4 3.1   Undertow 2.0 4.0    3、Spring Boot安装  服务器SDK最低要求为：Java SDK v1.8 查看环境Java版本：java -version
   安装方法一 您可以像使用任何标准Java库一样使用Spring Boot。为此，请spring-boot-*.jar在类路径中包含相应的文件。Spring Boot不需要任何特殊的工具集成，因此您可以使用任何IDE或文本编辑器。此外，Spring Boot应用程序没有什么特别之处，因此您可以像运行其他任何Java程序一样运行和调试Spring Boot应用程序。
虽然您可以复制Spring Boot jar，但我们通常建议您使用支持依赖管理的构建工具（如Maven或Gradle）。</description>
    </item>
    
    <item>
      <title>Numpy学习笔记</title>
      <link>https://aixin.me/post/numpy/</link>
      <pubDate>Wed, 06 Nov 2019 19:02:30 +0000</pubDate>
      
      <guid>https://aixin.me/post/numpy/</guid>
      <description>生成数组
 numpy.arange([start, ]stop, [step, ]dtype=None)
 示例
np.arange(3)array([0, 1, 2])np.arange(3.0)array([ 0., 1., 2.])np.arange(3,7)array([3, 4, 5, 6])np.arange(3,7,2)array([3, 5])生成随机整数
 numpy.random.randint(low, high=None, size=None, dtype=&amp;lsquo;l&amp;rsquo;)
 示例
np.random.randint(2, size=10)array([1, 0, 0, 0, 1, 1, 0, 0, 1, 0])np.random.randint(1, size=10)array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])随机排列
 np.random.shuffle(x)
 示例
arr = np.arange(10)np.random.shuffle(arr)arr[1 7 5 2 9 4 3 6 0 8]随机采样</description>
    </item>
    
    
    
  </channel>
</rss>
