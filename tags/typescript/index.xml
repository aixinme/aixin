<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>TypeScript on Aixin.me</title>
    <link>https://aixin.me/tags/typescript/</link>
    <description>Recent content in TypeScript on Aixin.me</description>
    <image>
      <url>https://aixin.me/papermod-cover.png</url>
      <link>https://aixin.me/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 24 Aug 2021 20:20:32 +0800</lastBuildDate><atom:link href="https://aixin.me/tags/typescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Typescript Basic Types</title>
      <link>https://aixin.me/post/typescript-basic-types/</link>
      <pubDate>Tue, 24 Aug 2021 20:20:32 +0800</pubDate>
      
      <guid>https://aixin.me/post/typescript-basic-types/</guid>
      <description>基础类型 介绍 为了让程序有价值，我们需要能够处理最简单的数据单元：数字，字符串，结构体，布尔值等。 TypeScript支持与JavaScript几乎相同的数据类型，此外还提供了实用的枚举类型方便我们使用。
Boolean 最基本的数据类型就是简单的true/false值，在JavaScript和TypeScript里叫做boolean（其它语言中也一样）。
let isDone: boolean = false; Number 和JavaScript一样，TypeScript里的所有数字都是浮点数或者大整数 。 这些浮点数的类型是number， 而大整数的类型则是 bigint。 除了支持十进制和十六进制字面量，TypeScript还支持ECMAScript 2015中引入的二进制和八进制字面量。
let decLiteral: number = 6; let hexLiteral: number = 0xf00d; let binaryLiteral: number = 0b1010; let octalLiteral: number = 0o744; let bigLiteral: bigint = 100n; String JavaScript程序的另一项基本操作是处理网页或服务器端的文本数据。 像其它语言里一样，我们使用string表示文本数据类型。 和JavaScript一样，可以使用双引号（&amp;quot;）或单引号（&#39;）表示字符串。
let name: string = &amp;#34;bob&amp;#34;; name = &amp;#34;smith&amp;#34;; 你还可以使用_模版字符串_，它可以定义多行文本和内嵌表达式。 这种字符串是被反引号包围（` `），并且以${ expr }这种形式嵌入表达式
let name: string = `Gene`; let age: number = 37; let sentence: string = `Hello, my name is ${ name }.</description>
    </item>
    
  </channel>
</rss>
